# Generated by Django 5.0.14 on 2025-06-01 16:33

import accounting.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usermanagement', '0012_remove_organization_tenant'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('account_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('nature', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('income', 'Income'), ('expense', 'Expense')], max_length=10)),
                ('classification', models.CharField(max_length=50)),
                ('balance_sheet_category', models.CharField(blank=True, max_length=50, null=True)),
                ('income_statement_category', models.CharField(blank=True, max_length=50, null=True)),
                ('cash_flow_category', models.CharField(blank=True, max_length=50, null=True)),
                ('system_type', models.BooleanField(default=True)),
                ('display_order', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_account_types', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_account_types', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_account_types', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChartOfAccount',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_code', models.CharField(max_length=50)),
                ('account_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_bank_account', models.BooleanField(default=False)),
                ('is_control_account', models.BooleanField(default=False)),
                ('control_account_type', models.CharField(blank=True, max_length=50, null=True)),
                ('require_cost_center', models.BooleanField(default=False)),
                ('require_project', models.BooleanField(default=False)),
                ('require_department', models.BooleanField(default=False)),
                ('default_tax_code', models.CharField(blank=True, max_length=50, null=True)),
                ('currency_code', models.CharField(default='USD', max_length=3)),
                ('opening_balance', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('current_balance', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('reconciled_balance', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('last_reconciled_date', models.DateTimeField(blank=True, null=True)),
                ('allow_manual_journal', models.BooleanField(default=True)),
                ('account_level', models.SmallIntegerField(default=1)),
                ('tree_path', models.CharField(blank=True, max_length=255, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.accounttype')),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_accounts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_accounts', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chart_of_accounts', to='usermanagement.organization')),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.chartofaccount')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['account_code'],
                'unique_together': {('organization', 'account_code')},
            },
        ),
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('cost_center_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('organization', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('currency_code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('currency_name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_Currencies', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_Currencies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('fiscal_year_id', models.CharField(default=accounting.models.generate_fiscal_year_id, max_length=10, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('archived', 'Archived')], default='open', max_length=20)),
                ('is_current', models.BooleanField(default=False)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('closed_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.IntegerField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fiscal_years', to='usermanagement.organization')),
            ],
            options={
                'db_table': 'fiscal_years',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('period_id', models.AutoField(primary_key=True, serialize=False)),
                ('period_number', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('adjustment', 'Adjustment')], default='open', max_length=20)),
                ('is_adjustment_period', models.BooleanField(default=False)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_periods', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_periods', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_periods', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='periods', to='accounting.fiscalyear')),
            ],
            options={
                'ordering': ['fiscal_year', 'period_number'],
                'unique_together': {('fiscal_year', 'period_number')},
            },
        ),
        migrations.CreateModel(
            name='JournalType',
            fields=[
                ('journal_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('auto_numbering_prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('auto_numbering_suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('auto_numbering_next', models.IntegerField(default=1)),
                ('is_system_type', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_journal_types', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_journal_types', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journal_types', to='usermanagement.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_journal_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('journal_id', models.AutoField(primary_key=True, serialize=False)),
                ('journal_number', models.CharField(max_length=50)),
                ('journal_date', models.DateField()),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('source_module', models.CharField(blank=True, max_length=50, null=True)),
                ('source_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('currency_code', models.CharField(default='USD', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=19)),
                ('total_debit', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('total_credit', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('posted', 'Posted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('reversed', 'Reversed')], default='draft', max_length=20)),
                ('is_recurring', models.BooleanField(default=False)),
                ('is_reversal', models.BooleanField(default=False)),
                ('reversal_reason', models.TextField(blank=True, null=True)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_journals', to=settings.AUTH_USER_MODEL)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_journals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_journals', to=settings.AUTH_USER_MODEL)),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_journals', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journals', to='usermanagement.organization')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.accountingperiod')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posted_journals', to=settings.AUTH_USER_MODEL)),
                ('recurring_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_journals', to='accounting.journal')),
                ('reversed_journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reversals', to='accounting.journal')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_journals', to=settings.AUTH_USER_MODEL)),
                ('journal_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.journaltype')),
            ],
            options={
                'ordering': ['-journal_date', '-journal_number'],
                'unique_together': {('organization', 'journal_number')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='usermanagement.organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxAuthority',
            fields=[
                ('authority_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('api_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_tax_authorities', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tax_authorities', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tax_authorities', to='usermanagement.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tax_authorities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tax Authorities',
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.CreateModel(
            name='TaxCode',
            fields=[
                ('tax_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('rate', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('is_recoverable', models.BooleanField(default=True)),
                ('is_compound', models.BooleanField(default=False)),
                ('effective_from', models.DateField(blank=True, null=True)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('report_line_code', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_tax_codes', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tax_codes', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tax_codes', to='usermanagement.organization')),
                ('purchase_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_tax_codes', to='accounting.chartofaccount')),
                ('sales_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_tax_codes', to='accounting.chartofaccount')),
                ('tax_authority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounting.taxauthority')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tax_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JournalLine',
            fields=[
                ('journal_line_id', models.AutoField(primary_key=True, serialize=False)),
                ('line_number', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('debit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('credit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('currency_code', models.CharField(default='USD', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=19)),
                ('functional_debit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('functional_credit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('tax_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('reconciled', models.BooleanField(default=False)),
                ('reconciled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.chartofaccount')),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_journal_lines', to=settings.AUTH_USER_MODEL)),
                ('cost_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.costcenter')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_journal_lines', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.department')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.journal')),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciled_journal_lines', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_journal_lines', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.project')),
                ('tax_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxcode')),
            ],
            options={
                'ordering': ['journal', 'line_number'],
                'unique_together': {('journal', 'line_number')},
            },
        ),
        migrations.CreateModel(
            name='TaxType',
            fields=[
                ('tax_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('filing_frequency', models.CharField(blank=True, choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], max_length=50, null=True)),
                ('is_system_type', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_tax_types', to=settings.AUTH_USER_MODEL)),
                ('authority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxauthority')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tax_types', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tax_types', to='usermanagement.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tax_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.AddField(
            model_name='taxcode',
            name='tax_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.taxtype'),
        ),
        migrations.CreateModel(
            name='VoucherModeConfig',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('layout_style', models.CharField(choices=[('standard', 'Standard'), ('compact', 'Compact'), ('detailed', 'Detailed')], default='standard', max_length=20)),
                ('show_account_balances', models.BooleanField(default=True)),
                ('show_tax_details', models.BooleanField(default=True)),
                ('show_dimensions', models.BooleanField(default=True)),
                ('allow_multiple_currencies', models.BooleanField(default=False)),
                ('require_line_description', models.BooleanField(default=True)),
                ('default_currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_voucher_configs', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_voucher_configs', to=settings.AUTH_USER_MODEL)),
                ('journal_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.journaltype')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='voucher_mode_configs', to='usermanagement.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_voucher_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.CreateModel(
            name='VoucherModeDefault',
            fields=[
                ('default_id', models.AutoField(primary_key=True, serialize=False)),
                ('default_debit', models.BooleanField(default=False)),
                ('default_credit', models.BooleanField(default=False)),
                ('default_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('default_department', models.IntegerField(default=0)),
                ('default_project', models.IntegerField(default=0)),
                ('default_cost_center', models.IntegerField(default=0)),
                ('default_description', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccount')),
                ('account_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.accounttype')),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_voucherdefaultconfigs', to=settings.AUTH_USER_MODEL)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defaults', to='accounting.vouchermodeconfig')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_voucherdefaultconfigs', to=settings.AUTH_USER_MODEL)),
                ('default_tax_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxcode')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_voucherdefaultconfigs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='CurrencyExchangeRate',
            fields=[
                ('rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('from_currency', models.CharField(max_length=3)),
                ('to_currency', models.CharField(max_length=3)),
                ('rate_date', models.DateField()),
                ('exchange_rate', models.DecimalField(decimal_places=6, max_digits=19)),
                ('is_average_rate', models.BooleanField(default=False)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('archived_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archived_exchange_rates', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_exchange_rates', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_exchange_rates', to='usermanagement.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_exchange_rates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'from_currency', 'to_currency', 'rate_date')},
            },
        ),
        migrations.CreateModel(
            name='GeneralLedger',
            fields=[
                ('gl_entry_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('transaction_date', models.DateField()),
                ('debit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('credit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('balance_after', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('currency_code', models.CharField(default='USD', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=19)),
                ('functional_debit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('functional_credit_amount', models.DecimalField(decimal_places=4, default=0, max_digits=19)),
                ('project', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('source_module', models.CharField(blank=True, max_length=50, null=True)),
                ('source_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('is_adjustment', models.BooleanField(default=False)),
                ('is_closing_entry', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.chartofaccount')),
                ('cost_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.costcenter')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.department')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='general_ledgers', to='usermanagement.organization')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.accountingperiod')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.journal')),
                ('journal_line', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gl_entries', to='accounting.journalline')),
            ],
            options={
                'ordering': ['transaction_date', 'created_at'],
                'indexes': [models.Index(fields=['account', 'transaction_date'], name='accounting__account_bfa2ca_idx'), models.Index(fields=['transaction_date', 'account'], name='accounting__transac_a72e5f_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='taxcode',
            unique_together={('organization', 'code')},
        ),
    ]
