# Generated by Django 5.0.14 on 2025-06-23 17:17

import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0013_alter_fiscalyear_id_and_more'),
        ('usermanagement', '0019_remove_appviewlog_created_by_remove_appviewlog_user_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='department',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='accountingperiod',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='chartofaccount',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='costcenter',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='currency',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='currencyexchangerate',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='department',
            name='code',
            field=models.CharField(default='DEPT', max_length=20, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='department',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='department',
            name='end_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='department',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='department',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='department',
            name='start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='department',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='fiscalyear',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='generalledger',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='journal',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='journalline',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='journaltype',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AddField(
            model_name='vouchermodeconfig',
            name='rowversion',
            field=models.BinaryField(blank=True, help_text='For MSSQL: ROWVERSION for optimistic concurrency.', max_length='max', null=True),
        ),
        migrations.AlterField(
            model_name='fiscalyear',
            name='id',
            field=models.CharField(default='3022459513', editable=False, max_length=10, unique=True),
        ),
        migrations.AddConstraint(
            model_name='accountingperiod',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='period_start_before_end'),
        ),
        migrations.AddConstraint(
            model_name='accounttype',
            constraint=models.CheckConstraint(check=models.Q(('root_code_step__gt', 0)), name='accounttype_root_code_step_positive'),
        ),
        migrations.AddConstraint(
            model_name='costcenter',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='costcenter_start_before_end'),
        ),
        migrations.AddConstraint(
            model_name='department',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='department_start_before_end'),
        ),
        migrations.AddConstraint(
            model_name='fiscalyear',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='fiscalyear_start_before_end'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='project_start_before_end'),
        ),
    ]
